{"ast":null,"code":"import axios from 'axios';\n\n// Get API key from environment variable\nconst API_KEY = \"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\";\nexport const generateResume = async resumeData => {\n  try {\n    const response = await axios.post('https://api.openai.com/v1/completions',\n    // OpenAI endpoint for GPT-3 (or other models)\n    {\n      model: 'text-davinci-003',\n      // Specify the model you want to use\n      prompt: createResumePrompt(resumeData),\n      // The prompt is built from the resumeData\n      max_tokens: 1500,\n      // You can adjust the max tokens based on how long the resume is\n      temperature: 0.7 // Controls creativity\n    }, {\n      headers: {\n        'Authorization': `Bearer ${API_KEY}`,\n        // Use the environment variable\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data.choices[0].text.trim(); // Return the formatted resume\n  } catch (error) {\n    console.error(\"Error generating resume:\", error);\n    throw error;\n  }\n};\n\n// Helper function to create a detailed prompt based on resume data\nconst createResumePrompt = data => {\n  return `Create a professional resume using the following information:\n\n  Name: ${data.name}\n  Contact Info: ${data.contactInfo}\n  Professional Summary: ${data.professionalSummary}\n  Experience: ${JSON.stringify(data.experience)}\n  Education: ${JSON.stringify(data.education)}\n  Skills: ${JSON.stringify(data.skills)}\n  Certifications: ${JSON.stringify(data.certifications)}\n  Languages: ${JSON.stringify(data.languages)}\n  Projects: ${JSON.stringify(data.projects)}\n  Volunteer Experience: ${JSON.stringify(data.volunteerExperience)}\n\n  The resume should be formatted properly, listing the sections in a clean, organized manner.`;\n};","map":{"version":3,"names":["axios","API_KEY","generateResume","resumeData","response","post","model","prompt","createResumePrompt","max_tokens","temperature","headers","data","choices","text","trim","error","console","name","contactInfo","professionalSummary","JSON","stringify","experience","education","skills","certifications","languages","projects","volunteerExperience"],"sources":["D:/Minor/reactjsCerti/frontend/src/services/openaiService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Get API key from environment variable\r\nconst API_KEY = \"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\";\r\n\r\nexport const generateResume = async (resumeData) => {\r\n  try {\r\n    const response = await axios.post(\r\n      'https://api.openai.com/v1/completions', // OpenAI endpoint for GPT-3 (or other models)\r\n      {\r\n        model: 'text-davinci-003', // Specify the model you want to use\r\n        prompt: createResumePrompt(resumeData), // The prompt is built from the resumeData\r\n        max_tokens: 1500, // You can adjust the max tokens based on how long the resume is\r\n        temperature: 0.7, // Controls creativity\r\n      },\r\n      {\r\n        headers: {\r\n          'Authorization': `Bearer ${API_KEY}`, // Use the environment variable\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    );\r\n    \r\n    return response.data.choices[0].text.trim(); // Return the formatted resume\r\n  } catch (error) {\r\n    console.error(\"Error generating resume:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Helper function to create a detailed prompt based on resume data\r\nconst createResumePrompt = (data) => {\r\n  return `Create a professional resume using the following information:\r\n\r\n  Name: ${data.name}\r\n  Contact Info: ${data.contactInfo}\r\n  Professional Summary: ${data.professionalSummary}\r\n  Experience: ${JSON.stringify(data.experience)}\r\n  Education: ${JSON.stringify(data.education)}\r\n  Skills: ${JSON.stringify(data.skills)}\r\n  Certifications: ${JSON.stringify(data.certifications)}\r\n  Languages: ${JSON.stringify(data.languages)}\r\n  Projects: ${JSON.stringify(data.projects)}\r\n  Volunteer Experience: ${JSON.stringify(data.volunteerExperience)}\r\n\r\n  The resume should be formatted properly, listing the sections in a clean, organized manner.`;\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAG,sKAAsK;AAEtL,OAAO,MAAMC,cAAc,GAAG,MAAOC,UAAU,IAAK;EAClD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAC/B,uCAAuC;IAAE;IACzC;MACEC,KAAK,EAAE,kBAAkB;MAAE;MAC3BC,MAAM,EAAEC,kBAAkB,CAACL,UAAU,CAAC;MAAE;MACxCM,UAAU,EAAE,IAAI;MAAE;MAClBC,WAAW,EAAE,GAAG,CAAE;IACpB,CAAC,EACD;MACEC,OAAO,EAAE;QACP,eAAe,EAAE,UAAUV,OAAO,EAAE;QAAE;QACtC,cAAc,EAAE;MAClB;IACF,CACF,CAAC;IAED,OAAOG,QAAQ,CAACQ,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC/C,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,MAAMR,kBAAkB,GAAII,IAAI,IAAK;EACnC,OAAO;AACT;AACA,UAAUA,IAAI,CAACM,IAAI;AACnB,kBAAkBN,IAAI,CAACO,WAAW;AAClC,0BAA0BP,IAAI,CAACQ,mBAAmB;AAClD,gBAAgBC,IAAI,CAACC,SAAS,CAACV,IAAI,CAACW,UAAU,CAAC;AAC/C,eAAeF,IAAI,CAACC,SAAS,CAACV,IAAI,CAACY,SAAS,CAAC;AAC7C,YAAYH,IAAI,CAACC,SAAS,CAACV,IAAI,CAACa,MAAM,CAAC;AACvC,oBAAoBJ,IAAI,CAACC,SAAS,CAACV,IAAI,CAACc,cAAc,CAAC;AACvD,eAAeL,IAAI,CAACC,SAAS,CAACV,IAAI,CAACe,SAAS,CAAC;AAC7C,cAAcN,IAAI,CAACC,SAAS,CAACV,IAAI,CAACgB,QAAQ,CAAC;AAC3C,0BAA0BP,IAAI,CAACC,SAAS,CAACV,IAAI,CAACiB,mBAAmB,CAAC;AAClE;AACA,8FAA8F;AAC9F,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}